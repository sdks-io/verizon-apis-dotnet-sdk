// <copyright file="ServiceInstance.cs" company="APIMatic">
// Copyright (c) APIMatic. All rights reserved.
// </copyright>
namespace Verizon.Standard.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.IO;
    using System.Linq;
    using System.Text;
    using System.Threading.Tasks;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using Verizon.Standard;
    using Verizon.Standard.Utilities;

    /// <summary>
    /// ServiceInstance.
    /// </summary>
    public class ServiceInstance
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ServiceInstance"/> class.
        /// </summary>
        public ServiceInstance()
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ServiceInstance"/> class.
        /// </summary>
        /// <param name="name">name.</param>
        /// <param name="revision">revision.</param>
        /// <param name="id">id.</param>
        /// <param name="serviceName">serviceName.</param>
        /// <param name="createdAt">createdAt.</param>
        /// <param name="modifiedAt">modifiedAt.</param>
        /// <param name="labels">labels.</param>
        /// <param name="projectName">projectName.</param>
        /// <param name="nameSpace">nameSpace.</param>
        /// <param name="deploymentType">deploymentType.</param>
        /// <param name="solutionRegulations">solutionRegulations.</param>
        /// <param name="edsDiscoveryIntent">edsDiscoveryIntent.</param>
        /// <param name="workLoadType">workLoadType.</param>
        /// <param name="clusterInfo">clusterInfo.</param>
        /// <param name="virtualMachineInfo">virtualMachineInfo.</param>
        /// <param name="workload">workload.</param>
        /// <param name="rafayClusterInfra">rafayClusterInfra.</param>
        /// <param name="customerId">customerId.</param>
        /// <param name="userId">userId.</param>
        public ServiceInstance(
            string name,
            Models.Revision revision,
            string id = null,
            string serviceName = null,
            DateTime? createdAt = null,
            DateTime? modifiedAt = null,
            Models.EdgeServiceLaunchParams labels = null,
            string projectName = "default",
            string nameSpace = "default",
            Models.DeploymentTypeEnum? deploymentType = Models.DeploymentTypeEnum.PrivateMEC,
            List<Models.RegionItem> solutionRegulations = null,
            Models.EdsDiscoveryIntent edsDiscoveryIntent = null,
            Models.WorkloadTypeEnum? workLoadType = Models.WorkloadTypeEnum.Container,
            Models.ClusterMetadata clusterInfo = null,
            Models.VirtualMachine virtualMachineInfo = null,
            List<Models.EdgeServiceWorkload> workload = null,
            Models.ClusterInfra rafayClusterInfra = null,
            string customerId = null,
            string userId = null)
        {
            this.Id = id;
            this.Name = name;
            this.ServiceName = serviceName;
            this.CreatedAt = createdAt;
            this.ModifiedAt = modifiedAt;
            this.Labels = labels;
            this.ProjectName = projectName;
            this.Revision = revision;
            this.NameSpace = nameSpace;
            this.DeploymentType = deploymentType;
            this.SolutionRegulations = solutionRegulations;
            this.EdsDiscoveryIntent = edsDiscoveryIntent;
            this.WorkLoadType = workLoadType;
            this.ClusterInfo = clusterInfo;
            this.VirtualMachineInfo = virtualMachineInfo;
            this.Workload = workload;
            this.RafayClusterInfra = rafayClusterInfra;
            this.CustomerId = customerId;
            this.UserId = userId;
        }

        /// <summary>
        /// Instance UUID generated by OF.
        /// </summary>
        [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
        public string Id { get; set; }

        /// <summary>
        /// User display name for Service Instance Id.
        /// </summary>
        [JsonProperty("name")]
        public string Name { get; set; }

        /// <summary>
        /// Name of the Service.
        /// </summary>
        [JsonProperty("serviceName", NullValueHandling = NullValueHandling.Ignore)]
        public string ServiceName { get; set; }

        /// <summary>
        /// Auto derived time of creation.
        /// </summary>
        [JsonConverter(typeof(IsoDateTimeConverter))]
        [JsonProperty("createdAt", NullValueHandling = NullValueHandling.Ignore)]
        public DateTime? CreatedAt { get; set; }

        /// <summary>
        /// Last modified time.
        /// </summary>
        [JsonConverter(typeof(IsoDateTimeConverter))]
        [JsonProperty("modifiedAt", NullValueHandling = NullValueHandling.Ignore)]
        public DateTime? ModifiedAt { get; set; }

        /// <summary>
        /// Gets or sets Labels.
        /// </summary>
        [JsonProperty("labels", NullValueHandling = NullValueHandling.Ignore)]
        public Models.EdgeServiceLaunchParams Labels { get; set; }

        /// <summary>
        /// Name of the service Instance Project(Project Name).
        /// </summary>
        [JsonProperty("projectName", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectName { get; set; }

        /// <summary>
        /// Gets or sets Revision.
        /// </summary>
        [JsonProperty("revision")]
        public Models.Revision Revision { get; set; }

        /// <summary>
        /// Name space inside cluster.
        /// </summary>
        [JsonProperty("nameSpace", NullValueHandling = NullValueHandling.Ignore)]
        public string NameSpace { get; set; }

        /// <summary>
        /// Default MEC platform for deploying service.
        /// </summary>
        [JsonProperty("deploymentType", ItemConverterType = typeof(StringEnumConverter), NullValueHandling = NullValueHandling.Ignore)]
        public Models.DeploymentTypeEnum? DeploymentType { get; set; }

        /// <summary>
        /// Gets or sets SolutionRegulations.
        /// </summary>
        [JsonProperty("solutionRegulations", NullValueHandling = NullValueHandling.Ignore)]
        public List<Models.RegionItem> SolutionRegulations { get; set; }

        /// <summary>
        /// Gets or sets EdsDiscoveryIntent.
        /// </summary>
        [JsonProperty("edsDiscoveryIntent", NullValueHandling = NullValueHandling.Ignore)]
        public Models.EdsDiscoveryIntent EdsDiscoveryIntent { get; set; }

        /// <summary>
        /// Default service type.
        /// </summary>
        [JsonProperty("workLoadType", ItemConverterType = typeof(StringEnumConverter), NullValueHandling = NullValueHandling.Ignore)]
        public Models.WorkloadTypeEnum? WorkLoadType { get; set; }

        /// <summary>
        /// Gets or sets ClusterInfo.
        /// </summary>
        [JsonProperty("clusterInfo", NullValueHandling = NullValueHandling.Ignore)]
        public Models.ClusterMetadata ClusterInfo { get; set; }

        /// <summary>
        /// Gets or sets VirtualMachineInfo.
        /// </summary>
        [JsonProperty("virtualMachineInfo", NullValueHandling = NullValueHandling.Ignore)]
        public Models.VirtualMachine VirtualMachineInfo { get; set; }

        /// <summary>
        /// Gets or sets Workload.
        /// </summary>
        [JsonProperty("workload", NullValueHandling = NullValueHandling.Ignore)]
        public List<Models.EdgeServiceWorkload> Workload { get; set; }

        /// <summary>
        /// Gets or sets RafayClusterInfra.
        /// </summary>
        [JsonProperty("rafayClusterInfra", NullValueHandling = NullValueHandling.Ignore)]
        public Models.ClusterInfra RafayClusterInfra { get; set; }

        /// <summary>
        /// Id of particular customer.
        /// </summary>
        [JsonProperty("customerId", NullValueHandling = NullValueHandling.Ignore)]
        public string CustomerId { get; set; }

        /// <summary>
        /// Id of a user.
        /// </summary>
        [JsonProperty("userId", NullValueHandling = NullValueHandling.Ignore)]
        public string UserId { get; set; }

        /// <inheritdoc/>
        public override string ToString()
        {
            var toStringOutput = new List<string>();

            this.ToString(toStringOutput);

            return $"ServiceInstance : ({string.Join(", ", toStringOutput)})";
        }

        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            if (obj == null)
            {
                return false;
            }

            if (obj == this)
            {
                return true;
            }
            return obj is ServiceInstance other &&                ((this.Id == null && other.Id == null) || (this.Id?.Equals(other.Id) == true)) &&
                ((this.Name == null && other.Name == null) || (this.Name?.Equals(other.Name) == true)) &&
                ((this.ServiceName == null && other.ServiceName == null) || (this.ServiceName?.Equals(other.ServiceName) == true)) &&
                ((this.CreatedAt == null && other.CreatedAt == null) || (this.CreatedAt?.Equals(other.CreatedAt) == true)) &&
                ((this.ModifiedAt == null && other.ModifiedAt == null) || (this.ModifiedAt?.Equals(other.ModifiedAt) == true)) &&
                ((this.Labels == null && other.Labels == null) || (this.Labels?.Equals(other.Labels) == true)) &&
                ((this.ProjectName == null && other.ProjectName == null) || (this.ProjectName?.Equals(other.ProjectName) == true)) &&
                ((this.Revision == null && other.Revision == null) || (this.Revision?.Equals(other.Revision) == true)) &&
                ((this.NameSpace == null && other.NameSpace == null) || (this.NameSpace?.Equals(other.NameSpace) == true)) &&
                ((this.DeploymentType == null && other.DeploymentType == null) || (this.DeploymentType?.Equals(other.DeploymentType) == true)) &&
                ((this.SolutionRegulations == null && other.SolutionRegulations == null) || (this.SolutionRegulations?.Equals(other.SolutionRegulations) == true)) &&
                ((this.EdsDiscoveryIntent == null && other.EdsDiscoveryIntent == null) || (this.EdsDiscoveryIntent?.Equals(other.EdsDiscoveryIntent) == true)) &&
                ((this.WorkLoadType == null && other.WorkLoadType == null) || (this.WorkLoadType?.Equals(other.WorkLoadType) == true)) &&
                ((this.ClusterInfo == null && other.ClusterInfo == null) || (this.ClusterInfo?.Equals(other.ClusterInfo) == true)) &&
                ((this.VirtualMachineInfo == null && other.VirtualMachineInfo == null) || (this.VirtualMachineInfo?.Equals(other.VirtualMachineInfo) == true)) &&
                ((this.Workload == null && other.Workload == null) || (this.Workload?.Equals(other.Workload) == true)) &&
                ((this.RafayClusterInfra == null && other.RafayClusterInfra == null) || (this.RafayClusterInfra?.Equals(other.RafayClusterInfra) == true)) &&
                ((this.CustomerId == null && other.CustomerId == null) || (this.CustomerId?.Equals(other.CustomerId) == true)) &&
                ((this.UserId == null && other.UserId == null) || (this.UserId?.Equals(other.UserId) == true));
        }
        
        /// <summary>
        /// ToString overload.
        /// </summary>
        /// <param name="toStringOutput">List of strings.</param>
        protected void ToString(List<string> toStringOutput)
        {
            toStringOutput.Add($"this.Id = {(this.Id == null ? "null" : this.Id == string.Empty ? "" : this.Id)}");
            toStringOutput.Add($"this.Name = {(this.Name == null ? "null" : this.Name == string.Empty ? "" : this.Name)}");
            toStringOutput.Add($"this.ServiceName = {(this.ServiceName == null ? "null" : this.ServiceName == string.Empty ? "" : this.ServiceName)}");
            toStringOutput.Add($"this.CreatedAt = {(this.CreatedAt == null ? "null" : this.CreatedAt.ToString())}");
            toStringOutput.Add($"this.ModifiedAt = {(this.ModifiedAt == null ? "null" : this.ModifiedAt.ToString())}");
            toStringOutput.Add($"this.Labels = {(this.Labels == null ? "null" : this.Labels.ToString())}");
            toStringOutput.Add($"this.ProjectName = {(this.ProjectName == null ? "null" : this.ProjectName == string.Empty ? "" : this.ProjectName)}");
            toStringOutput.Add($"this.Revision = {(this.Revision == null ? "null" : this.Revision.ToString())}");
            toStringOutput.Add($"this.NameSpace = {(this.NameSpace == null ? "null" : this.NameSpace == string.Empty ? "" : this.NameSpace)}");
            toStringOutput.Add($"this.DeploymentType = {(this.DeploymentType == null ? "null" : this.DeploymentType.ToString())}");
            toStringOutput.Add($"this.SolutionRegulations = {(this.SolutionRegulations == null ? "null" : $"[{string.Join(", ", this.SolutionRegulations)} ]")}");
            toStringOutput.Add($"this.EdsDiscoveryIntent = {(this.EdsDiscoveryIntent == null ? "null" : this.EdsDiscoveryIntent.ToString())}");
            toStringOutput.Add($"this.WorkLoadType = {(this.WorkLoadType == null ? "null" : this.WorkLoadType.ToString())}");
            toStringOutput.Add($"this.ClusterInfo = {(this.ClusterInfo == null ? "null" : this.ClusterInfo.ToString())}");
            toStringOutput.Add($"this.VirtualMachineInfo = {(this.VirtualMachineInfo == null ? "null" : this.VirtualMachineInfo.ToString())}");
            toStringOutput.Add($"this.Workload = {(this.Workload == null ? "null" : $"[{string.Join(", ", this.Workload)} ]")}");
            toStringOutput.Add($"this.RafayClusterInfra = {(this.RafayClusterInfra == null ? "null" : this.RafayClusterInfra.ToString())}");
            toStringOutput.Add($"this.CustomerId = {(this.CustomerId == null ? "null" : this.CustomerId == string.Empty ? "" : this.CustomerId)}");
            toStringOutput.Add($"this.UserId = {(this.UserId == null ? "null" : this.UserId == string.Empty ? "" : this.UserId)}");
        }
    }
}